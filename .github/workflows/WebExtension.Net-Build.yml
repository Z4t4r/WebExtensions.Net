name: Build

on:
  push:
    branches: [ main ]

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      SemVer: ${{ steps.gitversion.outputs.SemVer }}
      FullSemVer: ${{ steps.gitversion.outputs.FullSemVer }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: 5.x
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true

  buildAndTest:
    needs: version
    runs-on: windows-latest
    steps:
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.200
    - name: Setup Chrome and Chrome Driver
      uses: nanasess/setup-chromedriver@master
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner --version 5.2.0
    - name: Install Coverlet Console
      shell: powershell
      run: |
        New-Item -Path .\.coverlet\console -ItemType Directory
        dotnet tool install coverlet.console --tool-path .\.coverlet\console --version 3.0.3
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"WebExtension.Net" /o:"mingyaulee" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /v:"v${{ needs.version.outputs.FullSemVer }}" /d:sonar.cs.vstest.reportsPaths="test/TestResults/*.trx" /d:sonar.cs.opencover.reportsPaths="test/TestResults/**/*.opencover.xml"
        dotnet build --configuration Release
        .\.coverlet\console\coverlet ./test/WebExtension.Net.BrowserExtensionIntegrationTest/bin/Release/net5.0/wwwroot/framework --include "[WebExtension.Net]*" --target "dotnet" --targetargs "test . --no-build --no-restore --configuration Release" --format opencover --output ./test/TestResults/coverage --verbosity detailed
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  tag:
    needs: [version, buildAndTest]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Check if tag exists
      id: tagExistsCheck
      shell: bash
      run: git show-ref --tags --verify --quiet -- "refs/tags/v${{ needs.version.outputs.SemVer }}" && echo "::set-output name=tagExists::1" || echo "::set-output name=tagExists::0"
    - name: Create tag
      if: steps.tagExistsCheck.outputs.tagExists == 0
      uses: negz/create-tag@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v${{ needs.version.outputs.SemVer }}
